// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Staff {
  userid      Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  joinDate    DateTime?
  phoneNumber String
  address     String
  designation String
  role        String
  photo       String
  isActive    Boolean   @default(false)
}

model Shop {
  shopId  Int       @id @unique @default(autoincrement())
  GRPNAM  String
  CUSNAM  String
  ADRONE  String
  ADRTWO  String
  ADRTHR  String
  ADRFOU  String
  PLC     String
  PINCOD  String
  CNTPER  String
  SLNO    String
  TNGST   String
  TELNUM  String
  ZONNAM  String
  invoice Invoice[]
}

model LoginAuth {
  Id                     Int            @id @default(autoincrement())
  name                   String
  role                   String
  email                  String         @unique
  password               String
  passwordResetOTP       String?
  passwordResetExpiresAt DateTime?
  invoice                Invoice[]
  SupplierBill           SupplierBill[]
  StockAdjust            StockAdjust[]
}

model Product {
  ID     Int    @id @default(autoincrement())
  CNAME  String
  NAME   String
  MRP    String
  PPRICE String
  SPRICE String
  GST    String
  HSN    String
  CESSP  String
  CMCODE String
  FITEC  String
  FQTY   String
  FREE   String
  DISCP  String
}

model StockAdjust {
  id              String    @id @default(uuid())
  productName     String    @map("product_name")
  productId       Int       @map("product_id")
  productQuantity Int       @map("product_quantity")
  Reason          String
  damagedQuantity Int       @map("damaged_quantity")
  userId          Int
  user            LoginAuth @relation(fields: [userId], references: [Id])
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("Stock_Update")
}

model Company {
  id           Int            @id @default(autoincrement())
  cName        String
  cShort       String
  SupplierBill SupplierBill[]
}

model Customer {
  customerId          Int      @id @default(autoincrement())
  customerName        String
  customerType        String
  customerAddress     String
  customerPhoneNumber BigInt
  shopId              Int
  ladtOrder           DateTime
  pendingBalance      Int
}

model Invoice {
  id            String    @id @default(uuid()) @map("invoice_id")
  invoiceNumber Int
  products      Json[]
  invoiceDate   DateTime
  shopId        Int
  shop          Shop      @relation(fields: [shopId], references: [shopId])
  userId        Int
  user          LoginAuth @relation(fields: [userId], references: [Id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  isDeleted     Boolean   @default(false)
}

model CreditDebit {
  id            String   @id @default(uuid()) @map("credit_debit_id")
  invoiceNumber Int
  invoiceId     String
  invoiceDate   DateTime
  shopId        Int
  status        String
  total         Decimal
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model SupplierBill {
  id             String    @id @default(uuid())
  billNumber     Int
  billTotal      Int
  paymentMode    String
  pendingPayment Int
  billDate       DateTime
  supplierId     Int
  supplier       Company   @relation(fields: [supplierId], references: [id])
  userId         Int
  user           LoginAuth @relation(fields: [userId], references: [Id])
  products       Json[]
  address        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  isDeleted      Boolean   @default(false)
}

model Delivery {
  id          Int      @id
  billNumbers Int[]
  date        DateTime
  staffId     Int
  area        String
  status      String
}
